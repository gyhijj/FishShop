// –ü—Ä–æ—Å—Ç–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –Ω–∞ localStorage - –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–ß–ê–Ø –í–ï–†–°–ò–Ø

// –ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage
function getCart() {
    const cart = localStorage.getItem('cart');
    return cart ? JSON.parse(cart) : [];
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –≤ localStorage
function saveCart(cart) {
    localStorage.setItem('cart', JSON.stringify(cart));
}

// –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId) {
    console.log('üõí –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä ID:', productId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const userStr = localStorage.getItem('currentUser');
    if (!userStr) {
        showNotification('–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É', 'warning');
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä
    const product = products.find(p => p.id === productId);
    if (!product) {
        showNotification('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    let cart = getCart();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    const existingItem = cart.find(item => item.productId === productId);
    
    if (existingItem) {
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        existingItem.quantity += 1;
    } else {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
        cart.push({
            productId: productId,
            quantity: 1
        });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
    saveCart(cart);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(`${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`, 'success');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    updateCartCount();
    updateCartModal();
}

// –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function removeFromCart(productId) {
    let cart = getCart();
    cart = cart.filter(item => item.productId !== productId);
    saveCart(cart);
    
    const product = products.find(p => p.id === productId);
    showNotification(`${product?.name || '–¢–æ–≤–∞—Ä'} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã`, 'info');
    
    updateCartCount();
    updateCartModal();
}

// –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
function updateQuantity(productId, newQuantity) {
    if (newQuantity <= 0) {
        removeFromCart(productId);
        return;
    }
    
    let cart = getCart();
    const item = cart.find(item => item.productId === productId);
    
    if (item) {
        item.quantity = newQuantity;
        saveCart(cart);
        updateCartCount();
        updateCartModal();
    }
}

// –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
function clearCart() {
    localStorage.removeItem('cart');
    showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞', 'info');
    updateCartCount();
    updateCartModal();
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
function updateCartCount() {
    const cartCountElements = document.querySelectorAll('.cart-count');
    const cart = getCart();
    const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
    
    cartCountElements.forEach(element => {
        element.textContent = totalItems;
        element.style.display = totalItems > 0 ? 'block' : 'none';
    });
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartModal() {
    const cartModalBody = document.getElementById('cart-modal-body');
    if (!cartModalBody) {
        console.log('–≠–ª–µ–º–µ–Ω—Ç cart-modal-body –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    const cart = getCart();
    console.log('–ö–æ—Ä–∑–∏–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç:', cart);
    
    if (cart.length === 0) {
        cartModalBody.innerHTML = `
            <div class="cart-empty" style="text-align: center; padding: 40px; color: #666;">
                <i class="fas fa-shopping-cart" style="font-size: 60px; margin-bottom: 20px; color: #ddd;"></i>
                <h3 style="margin-bottom: 10px;">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h3>
                <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É</p>
            </div>
        `;
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ
        const totalAmount = document.getElementById('cart-total-amount');
        if (totalAmount) totalAmount.textContent = '0 ‚ÇΩ';
        return;
    }
    
    let cartHtml = '';
    let totalPrice = 0;
    
    cart.forEach(item => {
        const product = products.find(p => p.id === item.productId);
        if (!product) return;
        
        const itemTotal = product.price * item.quantity;
        totalPrice += itemTotal;
        
        cartHtml += `
            <div class="cart-item" style="display: flex; align-items: center; padding: 15px 0; border-bottom: 1px solid #eee;">
                <div class="cart-item-image" style="width: 60px; height: 60px; margin-right: 15px; flex-shrink: 0;">
                    <img src="${product.images[0]}" alt="${product.name}" 
                         style="width: 100%; height: 100%; object-fit: cover; border-radius: 4px;">
                </div>
                <div class="cart-item-info" style="flex: 1; min-width: 0;">
                    <h5 style="margin: 0 0 5px 0; font-size: 14px; font-weight: 600;">${product.name}</h5>
                    <div style="color: #666; font-size: 13px; margin-bottom: 8px;">${formatPrice(product.price)} ‚ÇΩ</div>
                    <div style="display: flex; align-items: center; gap: 10px;">
                        <div style="display: flex; align-items: center; gap: 8px; border: 1px solid #ddd; border-radius: 4px; padding: 2px;">
                            <button onclick="updateQuantity(${product.id}, ${item.quantity - 1})" 
                                    style="width: 28px; height: 28px; border: none; background: #f8f9fa; border-radius: 2px; cursor: pointer; display: flex; align-items: center; justify-content: center;">
                                ‚àí
                            </button>
                            <span style="min-width: 24px; text-align: center; font-weight: 500;">${item.quantity}</span>
                            <button onclick="updateQuantity(${product.id}, ${item.quantity + 1})" 
                                    style="width: 28px; height: 28px; border: none; background: #f8f9fa; border-radius: 2px; cursor: pointer; display: flex; align-items: center; justify-content: center;">
                                +
                            </button>
                        </div>
                        <button onclick="removeFromCart(${product.id})" 
                                style="color: #dc3545; background: none; border: none; cursor: pointer; font-size: 16px; padding: 4px;">
                            üóëÔ∏è
                        </button>
                    </div>
                </div>
                <div style="font-weight: 600; color: #2d5a2d; margin-left: 10px;">
                    ${formatPrice(itemTotal)} ‚ÇΩ
                </div>
            </div>
        `;
    });
    
    cartModalBody.innerHTML = cartHtml;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É
    const totalAmount = document.getElementById('cart-total-amount');
    if (totalAmount) {
        totalAmount.textContent = `${formatPrice(totalPrice)} ‚ÇΩ`;
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã
function showCartModal() {
    console.log('üõí –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É');
    updateCartModal();
    const modal = document.getElementById('cart-modal');
    if (modal) {
        modal.classList.add('show');
        modal.style.display = 'flex';
    }
}

// –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã
function hideCartModal() {
    const modal = document.getElementById('cart-modal');
    if (modal) {
        modal.classList.remove('show');
        modal.style.display = 'none';
    }
}

// –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
function checkout() {
    const userStr = localStorage.getItem('currentUser');
    if (!userStr) {
        showNotification('–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞', 'warning');
        return;
    }
    
    const cart = getCart();
    if (cart.length === 0) {
        showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞', 'warning');
        return;
    }
    
    // –ü—Ä–æ—Å—Ç–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    const user = JSON.parse(userStr);
    const totalPrice = cart.reduce((total, item) => {
        const product = products.find(p => p.id === item.productId);
        return total + (product ? product.price * item.quantity : 0);
    }, 0);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
    const order = {
        id: Date.now(),
        userId: user.id,
        total_price: totalPrice,
        status: 'processing',
        created_at: new Date().toISOString(),
        items: cart.map(item => {
            const product = products.find(p => p.id === item.productId);
            return {
                name: product ? product.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä',
                price: product ? product.price : 0,
                quantity: item.quantity
            };
        })
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    let orders = JSON.parse(localStorage.getItem('orders') || '[]');
    orders.push(order);
    localStorage.setItem('orders', JSON.stringify(orders));
    
    // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    clearCart();
    hideCartModal();
    showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!', 'success');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã
function initCart() {
    console.log('üõí –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω—ã –Ω–∞ localStorage');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    updateCartCount();
    updateCartModal();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    const cartBtn = document.getElementById('cart-btn');
    if (cartBtn) {
        cartBtn.addEventListener('click', showCartModal);
        console.log('‚úì –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    }
    
    const cartModalClose = document.getElementById('cart-modal-close');
    if (cartModalClose) {
        cartModalClose.addEventListener('click', hideCartModal);
        console.log('‚úì –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    }
    
    const clearCartBtn = document.getElementById('clear-cart');
    if (clearCartBtn) {
        clearCartBtn.addEventListener('click', clearCart);
        console.log('‚úì –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    }
    
    const checkoutBtn = document.getElementById('checkout-btn');
    if (checkoutBtn) {
        checkoutBtn.addEventListener('click', checkout);
        console.log('‚úì –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    }
    
    console.log('üõí –ö–æ—Ä–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

console.log('üõí –ü—Ä–æ—Å—Ç–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –Ω–∞ localStorage –∑–∞–≥—Ä—É–∂–µ–Ω–∞');